---
- name: Deploy Kubernetes
  hosts: master, worker
  become: true
  vars:
    kubernetes_version: 1.32
    ansible_user: mchellmer

  tasks:
    - name: Download and dearmor Kubernetes GPG key
      ansible.builtin.shell:
        cmd: >
          curl -fsSL https://pkgs.k8s.io/core:/stable:/v{{kubernetes_version}}/deb/Release.key | 
          gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Add Kubernetes APT repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_version }}/deb/ /"
        filename: kubernetes
        state: present
    
    - name: Update and upgrade all packages
      ansible.builtin.apt:
        upgrade: yes
        update_cache: yes

    - name: Install Kubernetes packages
      ansible.builtin.apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
          - kubernetes-cni
        state: present

- name: Configure Kubernetes Master
  hosts: master
  vars:
    ansible_user: mchellmer
  tasks:
    - name: Check if kubeadm init was run
      shell: |
        if [ -f /etc/kubernetes/admin.conf ]; then
          echo "kubeadm init was run"
        else
          echo "kubeadm init was not run"
        fi
      register: kubeadm_init_check
      changed_when: false
      tags: reset_kubeadm
      
    - name: Reset Kubernetes Master
      shell: kubeadm reset -f
      become: true
      when: "'kubeadm init was run' in kubeadm_init_check.stdout"
      tags: reset_kubeadm
      
    - name: Initialize Kubernetes Master
      shell: | 
          kubeadm init \
          --pod-network-cidr 10.244.0.0/16 \
          --apiserver-advertise-address 10.0.0.2 \
          --apiserver-cert-extra-sans kubernetes.cluster.home
      become: true
      register: kubeadm_init_output
      changed_when: "'kubeadm join' in kubeadm_init_output.stdout"
    
    - name: Save join command
      ansible.builtin.copy:
        dest: /root/kubeadm_join_command.sh
        content: "#!/bin/bash\n{{ kubeadm_init_output.stdout_lines[-2:] | join('\n') }}"
        mode: '0700'
    
    - name: Fetch join command
      ansible.builtin.fetch:
        src: /root/kubeadm_join_command.sh
        dest: /tmp/kubeadm_join_command.sh
        flat: yes
        
    - name: Apply kube-flannel from local template
      template:
        src: templates/kube-flannel.yaml.j2
        dest: /tmp/kube-flannel.yaml

    - name: Apply kube-flannel
      command: kubectl apply -f /tmp/kube-flannel.yaml {{ kubectl_args | default('') }}
      
  handlers:
    - name: Reload shell
      shell: . /home/{{ ansible_user }}/.bashrc
      ignore_errors: yes

- name: Join Kubernetes master to worker nodes
  hosts: worker
  become: true
  vars:
    ansible_user: mchellmer
  tasks:
    - name: Reset node
      shell: kubeadm reset -f

    - name: Copy join command to nodes
      ansible.builtin.copy:
        src: /tmp/kubeadm_join_command.sh
        dest: /home/mchellmer/kubeadm_join_command.sh
        mode: '0700'
        owner: mchellmer

    - name: Join nodes to Kubernetes cluster
      ansible.builtin.shell: /home/mchellmer/kubeadm_join_command.sh
      