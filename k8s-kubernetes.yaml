---
- name: Deploy Kubernetes
  hosts: localhost, nodes
  become: true

  tasks:
    - name: clear docker sources
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /etc/apt/sources.list.d/docker.list
        - /usr/share/keyrings/docker-archive-keyring.gpg
        - /usr/share/keyrings/docker.asc
        - /etc/apt/keyrings/docker.asc

    - name: Install additional packages
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
    
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Create /etc/apt/keyrings directory
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Docker's GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Add Docker repo
      ansible.builtin.apt_repository:
        repo: "deb [arch={{ ansible_architecture }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        update_cache: yes

    - name: Install containerd.io package
      apt:
        name: containerd.io
        state: present
    
    - name: Store containerd config
      command:
        cmd: containerd config default > /etc/containerd/config.toml
        creates: /etc/containerd/config.toml

    - name: Restart containerd service
      systemd:
        name: containerd
        state: restarted

    # - name: Install Kubernetes dependencies
    #   apt:
    #     name: "{{ item }}"
    #     state: present
    #   with_items:
    #     - kubelet
    #     - kubeadm
    #     - kubectl

    # - name: Initialize Kubernetes cluster
    #   command: kubeadm init

    # - name: Copy kubeconfig file
    #   command: cp /etc/kubernetes/admin.conf $HOME/.kube/config
    #   args:
    #     creates: $HOME/.kube/config

    # - name: Install network plugin
    #   command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

    # - name: Join worker nodes to the cluster
    #   command: kubeadm join <master-ip>:<master-port> --token <token> --discovery-token-ca-cert-hash <hash>
    #   when: inventory_hostname != 'master-node'